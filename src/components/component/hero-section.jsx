/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/TQv6eMOCKLp
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Switch } from "@/components/ui/switch"
import { Slider } from "@/components/ui/slider"

export function HeroSection() {
  const [selectedTab, setSelectedTab] = useState("habitacion")
  const [lights, setLights] = useState({
    habitacion: {
      on: true,
      brightness: 80,
      color: "#ffffff",
    },
    salaDeStar: {
      on: false,
      brightness: 50,
      color: "#ffcc00",
    },
    cocina: {
      on: true,
      brightness: 70,
      color: "#00ccff",
    },
    jardin: {
      on: true,
      brightness: 60,
      color: "#00ff00",
    },
  })
  const handleLightChange = (area, prop, value) => {
    setLights((prevLights) => ({
      ...prevLights,
      [area]: {
        ...prevLights[area],
        [prop]: value,
      },
    }))
  }
  const handleTabChange = (tab) => {
    setSelectedTab(tab)
  }
  return (
    (<div className="flex flex-col h-screen bg-background text-foreground">
      <header className="bg-primary text-primary-foreground py-4 px-6">
        <h1>Control de luces desde tu habitación hasta tu jardín</h1>
      </header>
      <div className="flex-1 overflow-auto">
        <div className="grid grid-cols-5 gap-6 p-6">
          <Button
            variant={selectedTab === "habitacion" ? "primary" : "ghost"}
            onClick={() => handleTabChange("habitacion")}
            className="justify-start gap-2">
            <HotelIcon className="w-6 h-6" />
            Habitación
          </Button>
          <Button
            variant={selectedTab === "salaDeStar" ? "primary" : "ghost"}
            onClick={() => handleTabChange("salaDeStar")}
            className="justify-start gap-2">
            <SpaceIcon className="w-6 h-6" />
            Sala
          </Button>
          <Button
            variant={selectedTab === "cocina" ? "primary" : "ghost"}
            onClick={() => handleTabChange("cocina")}
            className="justify-start gap-2">
            <CookingPotIcon className="w-6 h-6" />
            Cocina
          </Button>
          <Button
            variant={selectedTab === "jardin" ? "primary" : "ghost"}
            onClick={() => handleTabChange("jardin")}
            className="justify-start gap-2">
            <TreesIcon className="w-6 h-6" />
            Jardín
          </Button>
          <Button variant="ghost" className="justify-start gap-2">
            <SettingsIcon className="w-6 h-6" />
            Ajustes
          </Button>
        </div>
        <div className="bg-muted p-6">
          {selectedTab === "habitacion" && (
            <div className="grid gap-6">
              <div className="flex items-center justify-between">
                <span>Luces de la habitación</span>
                <Switch
                  checked={lights.habitacion.on}
                  onCheckedChange={(value) => handleLightChange("habitacion", "on", value)} />
              </div>
              <div className="flex items-center justify-between">
                <span>Brillo</span>
                <Slider
                  value={[lights.habitacion.brightness]}
                  onValueChange={(value) => handleLightChange("habitacion", "brightness", value)}
                  min={0}
                  max={100} />
              </div>
              <div className="flex items-center justify-between">
                <span>Color</span>
                <div />
              </div>
            </div>
          )}
          {selectedTab === "salaDeStar" && (
            <div className="grid gap-6">
              <div className="flex items-center justify-between">
                <span>Luces de la sala de estar</span>
                <Switch
                  checked={lights.salaDeStar.on}
                  onCheckedChange={(value) => handleLightChange("salaDeStar", "on", value)} />
              </div>
              <div className="flex items-center justify-between">
                <span>Brillo</span>
                <Slider
                  value={[lights.salaDeStar.brightness]}
                  onValueChange={(value) => handleLightChange("salaDeStar", "brightness", value)}
                  min={0}
                  max={100} />
              </div>
              <div className="flex items-center justify-between">
                <span>Color</span>
                <div />
              </div>
            </div>
          )}
          {selectedTab === "cocina" && (
            <div className="grid gap-6">
              <div className="flex items-center justify-between">
                <span>Luces de la cocina</span>
                <Switch
                  checked={lights.cocina.on}
                  onCheckedChange={(value) => handleLightChange("cocina", "on", value)} />
              </div>
              <div className="flex items-center justify-between">
                <span>Brillo</span>
                <Slider
                  value={[lights.cocina.brightness]}
                  onValueChange={(value) => handleLightChange("cocina", "brightness", value)}
                  min={0}
                  max={100} />
              </div>
              <div className="flex items-center justify-between">
                <span>Color</span>
                <div />
              </div>
            </div>
          )}
          {selectedTab === "jardin" && (
            <div className="grid gap-6">
              <div className="flex items-center justify-between">
                <span>Luces del jardín</span>
                <Switch
                  checked={lights.jardin.on}
                  onCheckedChange={(value) => handleLightChange("jardin", "on", value)} />
              </div>
              <div className="flex items-center justify-between">
                <span>Brillo</span>
                <Slider
                  value={[lights.jardin.brightness]}
                  onValueChange={(value) => handleLightChange("jardin", "brightness", value)}
                  min={0}
                  max={100} />
              </div>
              <div className="flex items-center justify-between">
                <span>Color</span>
                <div />
              </div>
            </div>
          )}
        </div>
      </div>
      <footer
        className="bg-primary text-primary-foreground py-4 px-6 flex justify-between items-center">
        <div>
          <Button variant="ghost" className="gap-2">
            <ProjectorIcon className="w-6 h-6" />
            Programar
          </Button>
          <Button variant="ghost" className="gap-2">
            <GroupIcon className="w-6 h-6" />
            Grupos
          </Button>
          <Button variant="ghost" className="gap-2">
            <BracketsIcon className="w-6 h-6" />
            Preajustes
          </Button>
        </div>
        <div>
          <Button variant="ghost" className="gap-2">
            <MonitorSpeakerIcon className="w-6 h-6" />
            Control de voz
          </Button>
        </div>
      </footer>
    </div>)
  );
}

function BracketsIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M16 3h3v18h-3" />
      <path d="M8 21H5V3h3" />
    </svg>)
  );
}


function CookingPotIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M2 12h20" />
      <path d="M20 12v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2v-8" />
      <path d="m4 8 16-4" />
      <path
        d="m8.86 6.78-.45-1.81a2 2 0 0 1 1.45-2.43l1.94-.48a2 2 0 0 1 2.43 1.46l.45 1.8" />
    </svg>)
  );
}


function GroupIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M3 7V5c0-1.1.9-2 2-2h2" />
      <path d="M17 3h2c1.1 0 2 .9 2 2v2" />
      <path d="M21 17v2c0 1.1-.9 2-2 2h-2" />
      <path d="M7 21H5c-1.1 0-2-.9-2-2v-2" />
      <rect width="7" height="5" x="7" y="7" rx="1" />
      <rect width="7" height="5" x="10" y="12" rx="1" />
    </svg>)
  );
}


function HotelIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M10 22v-6.57" />
      <path d="M12 11h.01" />
      <path d="M12 7h.01" />
      <path d="M14 15.43V22" />
      <path d="M15 16a5 5 0 0 0-6 0" />
      <path d="M16 11h.01" />
      <path d="M16 7h.01" />
      <path d="M8 11h.01" />
      <path d="M8 7h.01" />
      <rect x="4" y="2" width="16" height="20" rx="2" />
    </svg>)
  );
}


function MonitorSpeakerIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M5.5 20H8" />
      <path d="M17 9h.01" />
      <rect width="10" height="16" x="12" y="4" rx="2" />
      <path d="M8 6H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h4" />
      <circle cx="17" cy="15" r="1" />
    </svg>)
  );
}


function ProjectorIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M5 7 3 5" />
      <path d="M9 6V3" />
      <path d="m13 7 2-2" />
      <circle cx="9" cy="13" r="3" />
      <path
        d="M11.83 12H20a2 2 0 0 1 2 2v4a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2v-4a2 2 0 0 1 2-2h2.17" />
      <path d="M16 16h2" />
    </svg>)
  );
}


function SettingsIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path
        d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z" />
      <circle cx="12" cy="12" r="3" />
    </svg>)
  );
}


function SpaceIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M22 17v1c0 .5-.5 1-1 1H3c-.5 0-1-.5-1-1v-1" />
    </svg>)
  );
}


function TreesIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M10 10v.2A3 3 0 0 1 8.9 16v0H5v0h0a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z" />
      <path d="M7 16v6" />
      <path d="M13 19v3" />
      <path
        d="M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5" />
    </svg>)
  );
}


function XIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>)
  );
}
